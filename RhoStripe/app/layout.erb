<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>

    <title>RhoStripe</title>

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>

    <% if Rho::System.getProperty('platform') == 'APPLE' || Rho::System.getProperty('platform') == 'ANDROID' ||
        ( Rho::System.getProperty('platform') != 'WINDOWS' && Rho::System.getProperty('webviewFramework') =~ /^WEBKIT/) %>
        <script src="/public/api/rhoapi-modules.js" type="text/javascript"></script>

        <script src="/public/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>

        <link rel="stylesheet" href="/public/jqmobile/jquery.mobile-1.3.1.min.css">
        <link rel="stylesheet" href="/public/css/jqmobile-patch.css">

        <script type="text/javascript">
            $(document).bind("mobileinit", function(){
                // jQuery-Mobile init options initialization goes here. For example, you may
                // enable automatically generated 'Back' buttons on headers this way:
                //$.mobile.page.prototype.options.addBackBtn = true;

                // You can disable (with false value) or change page loading message
                $.mobile.loadingMessage = false;
                //$.mobile.loadingMessage = "loading"; // it is default value

                // For documented init options look here:
                // http://jquerymobile.com/demos/1.3.1/docs/api/globalconfig.html

                // For poorly documented options search for ".prototype.options"
                // in the jQuery Mobile source code

                // Rhodes custom option!
                // how long to wait transition end before "loading.." message will be shown
                $.mobile.loadingMessageDelay = 300; // in ms

                // Uncomment these options in case of performance problem in pages transition
                //$.mobile.defaultPageTransition = 'none';
                //$.mobile.defaultDialogTransition = 'none';
                //$.mobile.ajaxEnabled = false;
                //$.mobile.pushStateEnabled = false;
                //$.mobile.loadingMessageDelay = 50; // in ms
                
               Rho.CardReader.open(function(d){
                  console.log(d); 
                  cc = new CreditCardTrackData(d.data);
                  $('#payment-form input[data-stripe="number"]').val(cc.number);
                  $('#payment-form input[data-stripe="exp-month"]').val(cc.expiration.substring(2));
                  $('#payment-form input[data-stripe="exp-year"]').val(cc.CENTURY + cc.expiration.substring(0,2));  
                });

            });
        </script>
        <script type="text/javascript" charset="utf-8" src="/public/jqmobile/jquery.mobile-1.3.1.min.js"></script>
        <script type="text/javascript" charset="utf-8" src="/public/js/jqmobile-patch.js"></script>

    <% end %>
<script type="text/javascript" charset="utf-8" src="/public/js/credit_card_parser.js"></script>

    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    
<script type="text/javascript">
  // This identifies your website in the createToken call below
  Stripe.setPublishableKey('pk_test_kxj0sKRLy10KrVYDTw9mSODG');
  // ...
  
jQuery(function($) {
  $('#payment-form').submit(function(event) {
    var $form = $(this);

    // Disable the submit button to prevent repeated clicks
    $form.find('button').prop('disabled', true);

    Stripe.card.createToken($form, stripeResponseHandler);

    // Prevent the form from submitting with the default action
    return false;
  });
});

var stripeResponseHandler = function(status, response) {
  var $form = $('#payment-form');
  console.log(status);
  console.log(response);
  if (response.error) {
    // Show the errors on the form
    $form.find('.payment-errors').text(response.error.message);
    $form.find('button').prop('disabled', false);
  } else {
    // token contains id, last4, and card type
    var token = response.id;
    // Insert the token into the form so it gets submitted to the server
    $form.append($('<input type="hidden" name="stripeToken" />').val(token));
    // and submit
    alert('Card Accepted: ' + token);
    //$form.get(0).submit();
        
  }
};
  
</script>
    
</head>

<body data-platform="<%= Rho::System.getProperty('platform') %>">
    <%= @content %>
</body>

 <!-- <script src="http://192.168.0.137:8080/target/target-script-min.js#anonymous"></script> -->
</html>
